<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.goshop.goods.mapper.read.ReadGsGoodsUserClassMapper" >
  <resultMap id="BaseResultMap" type="org.goshop.goods.pojo.GsGoodsUserClass" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="addTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="deleteStatus" property="deletestatus" jdbcType="BIT" />
    <result column="className" property="classname" jdbcType="VARCHAR" />
    <result column="display" property="display" jdbcType="BIT" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <collection property="childs" ofType="org.goshop.goods.pojo.GsGoodsUserClass" column="parent_id">
      <id column="c_id" property="id" jdbcType="BIGINT" />
      <result column="c_addTime" property="addtime" jdbcType="TIMESTAMP" />
      <result column="c_deleteStatus" property="deletestatus" jdbcType="BIT" />
      <result column="c_className" property="classname" jdbcType="VARCHAR" />
      <result column="c_display" property="display" jdbcType="BIT" />
      <result column="c_level" property="level" jdbcType="INTEGER" />
      <result column="c_sequence" property="sequence" jdbcType="INTEGER" />
      <result column="c_parent_id" property="parentId" jdbcType="BIGINT" />
      <result column="c_user_id" property="userId" jdbcType="BIGINT" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, addTime, deleteStatus, className, display, level, sequence, parent_id, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from gs_goods_user_class
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByUserIdAndNullParent" resultMap="BaseResultMap">
    select
        t.id,
        t.addTime,
        t.deleteStatus,
        t.className,
        t.display,
        t.level,
        t.sequence,
        t.parent_id,
        t.user_id,
        child.id AS c_id,
        child.addTime AS c_addTime,
        child.deleteStatus AS c_deleteStatus,
        child.className AS c_className,
        child.display AS c_display,
        child.level AS c_level,
        child.sequence AS c_sequence,
        child.parent_id AS c_parent_id,
        child.user_id AS c_user_id
    from gs_goods_user_class t
    LEFT JOIN gs_goods_user_class child ON (child.parent_id = t.id)
    where t.user_id = #{userId,jdbcType=BIGINT}
    <if test="display != null">
      AND t.display = #{display,jdbcType=BIT}
    </if>
    AND t.parent_id IS NULL
    order BY t.sequence ASC
  </select>
  <select id="selectByUserIdAndParentId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from gs_goods_user_class
    where user_id = #{userId,jdbcType=BIGINT} AND parent_id = #{parentId,jdbcType=BIGINT}
    order BY sequence ASC
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
      t.id,
      t.addTime,
      t.deleteStatus,
      t.className,
      t.display,
      t.level,
      t.sequence,
      t.parent_id,
      t.user_id,
      child.id AS c_id,
      child.addTime AS c_addTime,
      child.deleteStatus AS c_deleteStatus,
      child.className AS c_className,
      child.display AS c_display,
      child.level AS c_level,
      child.sequence AS c_sequence,
      child.parent_id AS c_parent_id,
      child.user_id AS c_user_id
    from gs_goods_user_class t
    LEFT JOIN gs_goods_user_class child ON (child.parent_id = t.id)
    <where>
      <if test="display != null">
        and t.display = #{display}
      </if>
      <if test="parent_id != null">
        and t.parent_id = #{parent_id}
      </if>
      <if test="parent_id == null">
        and t.parent_id IS NULL
      </if>
      <if test="user_id == null">
        and t.user_id = #{user_id}
      </if>

    </where>
    <if test="orderBy != null">
    order BY #{orderBy} #{orderType}
    </if>
  </select>
</mapper>
