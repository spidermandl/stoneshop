<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.goshop.goods.mapper.read.ReadGsGoodsMapper">
  <resultMap id="BaseResultMap" type="org.goshop.goods.pojo.GsGoods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="deleteStatus" jdbcType="BIT" property="deletestatus" />
    <result column="goods_click" jdbcType="INTEGER" property="goodsClick" />
    <result column="goods_fee" jdbcType="VARCHAR" property="goodsFee" />
    <result column="goods_inventory" jdbcType="INTEGER" property="goodsInventory" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_recommend" jdbcType="BIT" property="goodsRecommend" />
    <result column="goods_salenum" jdbcType="INTEGER" property="goodsSalenum" />
    <result column="goods_seller_time" jdbcType="TIMESTAMP" property="goodsSellerTime" />
    <result column="goods_serial" jdbcType="VARCHAR" property="goodsSerial" />
    <result column="goods_status" jdbcType="INTEGER" property="goodsStatus" />
    <result column="goods_transfee" jdbcType="INTEGER" property="goodsTransfee" />
    <result column="goods_weight" jdbcType="DECIMAL" property="goodsWeight" />
    <result column="inventory_type" jdbcType="VARCHAR" property="inventoryType" />
    <result column="seo_keywords" jdbcType="VARCHAR" property="seoKeywords" />
    <result column="store_price" jdbcType="DECIMAL" property="storePrice" />
    <result column="store_recommend" jdbcType="BIT" property="storeRecommend" />
    <result column="store_recommend_time" jdbcType="TIMESTAMP" property="storeRecommendTime" />
    <result column="ztc_apply_time" jdbcType="TIMESTAMP" property="ztcApplyTime" />
    <result column="ztc_begin_time" jdbcType="DATE" property="ztcBeginTime" />
    <result column="ztc_click_num" jdbcType="INTEGER" property="ztcClickNum" />
    <result column="ztc_dredge_price" jdbcType="INTEGER" property="ztcDredgePrice" />
    <result column="ztc_gold" jdbcType="INTEGER" property="ztcGold" />
    <result column="ztc_pay_status" jdbcType="INTEGER" property="ztcPayStatus" />
    <result column="ztc_price" jdbcType="INTEGER" property="ztcPrice" />
    <result column="ztc_status" jdbcType="INTEGER" property="ztcStatus" />
    <result column="gc_id" jdbcType="BIGINT" property="gcId" />
    <result column="goods_brand_id" jdbcType="BIGINT" property="goodsBrandId" />
    <result column="goods_main_photo_id" jdbcType="BIGINT" property="goodsMainPhotoId" />
    <result column="goods_store_id" jdbcType="BIGINT" property="goodsStoreId" />
    <result column="ztc_admin_id" jdbcType="BIGINT" property="ztcAdminId" />
    <result column="goods_collect" jdbcType="INTEGER" property="goodsCollect" />
    <result column="group_buy" jdbcType="INTEGER" property="groupBuy" />
    <result column="goods_choice_type" jdbcType="INTEGER" property="goodsChoiceType" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="activity_status" jdbcType="INTEGER" property="activityStatus" />
    <result column="bargain_status" jdbcType="INTEGER" property="bargainStatus" />
    <result column="delivery_status" jdbcType="INTEGER" property="deliveryStatus" />
    <result column="goods_current_price" jdbcType="DECIMAL" property="goodsCurrentPrice" />
    <result column="goods_volume" jdbcType="DECIMAL" property="goodsVolume" />
    <result column="ems_trans_fee" jdbcType="DECIMAL" property="emsTransFee" />
    <result column="express_trans_fee" jdbcType="DECIMAL" property="expressTransFee" />
    <result column="mail_trans_fee" jdbcType="DECIMAL" property="mailTransFee" />
    <result column="transport_id" jdbcType="BIGINT" property="transportId" />
    <result column="combin_status" jdbcType="INTEGER" property="combinStatus" />
    <result column="combin_begin_time" jdbcType="DATE" property="combinBeginTime" />
    <result column="combin_end_time" jdbcType="DATE" property="combinEndTime" />
    <result column="combin_price" jdbcType="DECIMAL" property="combinPrice" />
    <result column="description_evaluate" jdbcType="DECIMAL" property="descriptionEvaluate" />
    <result column="weixin_shop_hot" jdbcType="BIT" property="weixinShopHot" />
    <result column="weixin_shop_hotTime" jdbcType="DATE" property="weixinShopHottime" />
    <result column="weixin_shop_recommend" jdbcType="BIT" property="weixinShopRecommend" />
    <result column="weixin_shop_recommendTime" jdbcType="DATE" property="weixinShopRecommendtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.goshop.goods.pojo.GsGoodsWithBLOBs">
    <result column="goods_details" jdbcType="LONGVARCHAR" property="goodsDetails" />
    <result column="goods_inventory_detail" jdbcType="LONGVARCHAR" property="goodsInventoryDetail" />
    <result column="goods_property" jdbcType="LONGVARCHAR" property="goodsProperty" />
    <result column="seo_description" jdbcType="LONGVARCHAR" property="seoDescription" />
    <result column="ztc_admin_content" jdbcType="LONGVARCHAR" property="ztcAdminContent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, addTime, deleteStatus, goods_click, goods_fee, goods_inventory, goods_name, goods_price,
    goods_recommend, goods_salenum, goods_seller_time, goods_serial, goods_status, goods_transfee,
    goods_weight, inventory_type, seo_keywords, store_price, store_recommend, store_recommend_time,
    ztc_apply_time, ztc_begin_time, ztc_click_num, ztc_dredge_price, ztc_gold, ztc_pay_status,
    ztc_price, ztc_status, gc_id, goods_brand_id, goods_main_photo_id, goods_store_id,
    ztc_admin_id, goods_collect, group_buy, goods_choice_type, group_id, activity_status,
    bargain_status, delivery_status, goods_current_price, goods_volume, ems_trans_fee,
    express_trans_fee, mail_trans_fee, transport_id, combin_status, combin_begin_time,
    combin_end_time, combin_price, description_evaluate, weixin_shop_hot, weixin_shop_hotTime,
    weixin_shop_recommend, weixin_shop_recommendTime
  </sql>
  <sql id="Blob_Column_List">
    goods_details, goods_inventory_detail, goods_property, seo_description, ztc_admin_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from gs_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectSingleColumnById" resultType="java.lang.String">
    select
    #{name}
    from gs_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="findGoodsByMainPhoto" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from gs_goods
    where goods_main_photo_id = #{goods_main_photo_id,jdbcType=BIGINT}
  </select>

  <select id="findByCondition" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from gs_goods
    <where>
      <if test="goods_status != null">
        goods_status = #{goods_status}
      </if>
      <if test="goods_store_id != null">
        and goods_store_id = #{goods_store_id}
      </if>
      <if test="goods_name != null">
        and goods_name LIKE #{goods_name}
      </if>
      <if test="goods_recommend != null">
        and goods_recommend = #{goods_recommend}
      </if>
      <if test="store_recommend != null">
        and store_recommend = #{store_recommend}
      </if>
      <if test="goods_price != null">
        and goods_price = #{goods_price}
      </if>
      <if test="begin_price != null">
        and goods_price &gt;= #{begin_price}
      </if>
      <if test="end_price != null">
        and goods_price &lt;= #{end_price}
      </if>
      <if test="exclude_id != null">
        and id != #{exclude_id}
      </if>
      <if test="ztc_begin_time != null">
        and ztc_begin_time &lt;= #{ztc_begin_time}
      </if>
      <if test="ztc_gold != null">
        and ztc_gold &gt;= #{ztc_gold}
      </if>
      <if test="goods_brand_id != null">
        and goods_brand_id = #{goods_brand_id}
      </if>
--       item表示集合中每一个元素进行迭代时的别名，
--       index指 定一个名字，用于表示在迭代过程中，每次迭代到的位置，
--       open表示该语句以什么开始，
--       separator表示在每次进行迭代之间以什么符号作为分隔 符，
--       close表示以什么结束。
      <if test="ids !=null">
        and id IN
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="ids_from_class !=null">
        and id IN
        <foreach collection="ids_from_class" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="ids_from_spec !=null">
        and id IN
        <foreach collection="ids_from_spec" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="brand_ids !=null">
        and goods_brand_id IN
        <foreach collection="brand_ids" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="good_class_ids !=null">
        and gc_id IN
        <foreach collection="good_class_ids" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="good_store_ids !=null">
        and good_store_id IN
        <foreach collection="good_store_ids" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="goods_type_ids !=null">
        and left join gs_goods_class class ON
        (gc_id = class.id
          and class.goods_type_id IN
            <foreach collection="goods_type_ids" index="index" item="item" open="(" separator="," close=")">
              #{item}
            </foreach>
        )
      </if>
    </where>
    <if test="orderBy !=null">
    order BY #{orderBy} #{orderType}
    </if>
    <if test="limit_down !=null">
      limit #{limit_down},#{limit_up}
    </if>
  </select>

</mapper>
