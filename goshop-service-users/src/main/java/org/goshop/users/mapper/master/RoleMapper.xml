<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.goshop.users.mapper.master.RoleMapper" >
  <resultMap id="BaseResultMap" type="org.goshop.users.pojo.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <collection property="userList" ofType="org.goshop.users.pojo.User">
      <id column="u_id" property="id" jdbcType="BIGINT" />
      <result column="u_user_name" property="userName" jdbcType="VARCHAR" />
      <result column="u_login_name" property="loginName" jdbcType="VARCHAR" />
      <result column="u_password" property="password" jdbcType="VARCHAR" />
      <result column="u_salt" property="salt" jdbcType="VARCHAR" />
      <result column="u_enable" property="enable" jdbcType="INTEGER" />
      <result column="u_type" property="type" jdbcType="INTEGER" />
      <result column="u_created" property="created" jdbcType="DATE" />
      <result column="u_upcreated" property="upcreated" jdbcType="DATE" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, alias, enable, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from gs_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from gs_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.goshop.users.pojo.Role" useGeneratedKeys="true" keyProperty="id">
    insert into gs_role (id, name, alias, 
      enable, type)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{enable,jdbcType=INTEGER}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.goshop.users.pojo.Role" useGeneratedKeys="true" keyProperty="id">
    insert into gs_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.goshop.users.pojo.Role" >
    update gs_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.goshop.users.pojo.Role" >
    update gs_role
    set name = #{name,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findByName" resultMap="BaseResultMap" parameterType="string">
    select
    <include refid="Base_Column_List"/>
    from gs_role
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="findOfUserOne" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    SELECT
	r.*,u.id as u_id,u.user_name as u_user_name,u.login_name as u_login_name,u.password as u_password,u.salt as u_salt,u.enable as u_enable,u.type as u_type,u.created as u_created,u.upcreated as u_upcreated FROM
	(
		gs_role r
		LEFT JOIN gs_user_role o ON r.id = o.r_id
	)
    LEFT JOIN gs_user u ON o.u_id = u.id
    WHERE r.id = #{id,jdbcType=BIGINT}
  </select>
</mapper>