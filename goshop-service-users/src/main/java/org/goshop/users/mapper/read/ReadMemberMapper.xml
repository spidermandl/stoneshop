<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.goshop.users.mapper.read.ReadMemberMapper" >
  <resultMap id="BaseResultMap" type="org.goshop.users.pojo.Member" >
    <id column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="member_truename" property="memberTruename" jdbcType="VARCHAR" />
    <result column="member_avatar" property="memberAvatar" jdbcType="VARCHAR" />
    <result column="member_sex" property="memberSex" jdbcType="BIT" />
    <result column="member_birthday" property="memberBirthday" jdbcType="DATE" />
    <result column="member_email" property="memberEmail" jdbcType="VARCHAR" />
    <result column="member_qq" property="memberQq" jdbcType="VARCHAR" />
    <result column="member_ww" property="memberWw" jdbcType="VARCHAR" />
    <result column="member_time" property="memberTime" jdbcType="TIME" />
    <result column="member_qqopenid" property="memberQqopenid" jdbcType="VARCHAR" />
    <result column="member_points" property="memberPoints" jdbcType="INTEGER" />
    <result column="available_predeposit" property="availablePredeposit" jdbcType="DECIMAL" />
    <result column="freeze_predeposit" property="freezePredeposit" jdbcType="DECIMAL" />
    <result column="inform_allow" property="informAllow" jdbcType="BIT" />
    <result column="is_buy" property="isBuy" jdbcType="BIT" />
    <result column="is_allowtalk" property="isAllowtalk" jdbcType="BIT" />
    <result column="member_state" property="memberState" jdbcType="BIT" />
    <result column="member_credit" property="memberCredit" jdbcType="INTEGER" />
    <result column="member_areaid" property="memberAreaid" jdbcType="INTEGER" />
    <result column="member_cityid" property="memberCityid" jdbcType="INTEGER" />
    <result column="member_provinceid" property="memberProvinceid" jdbcType="INTEGER" />
    <result column="member_areainfo" property="memberAreainfo" jdbcType="VARCHAR" />
    <result column="member_qqinfo" property="memberQqinfo" jdbcType="LONGVARCHAR" />
    <result column="member_privacy" property="memberPrivacy" jdbcType="VARCHAR" />
    <result column="member_mobile" property="memberMobile" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_num" property="loginNum" jdbcType="INTEGER" />
    <result column="login_time" property="loginTime" jdbcType="TIME" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    member_id, user_id, member_truename, member_avatar, member_sex, member_birthday,
    member_email, member_qq, member_ww, member_time, member_qqopenid, member_points,
    available_predeposit, freeze_predeposit, inform_allow, is_buy, is_allowtalk, member_state,
    member_credit, member_areaid, member_cityid, member_provinceid, member_areainfo,member_qqinfo,
    member_privacy,member_mobile
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
     select m.*,u.user_name,u.login_name,u.login_num,u.login_time,u.login_ip
     from gs_member m LEFT JOIN gs_user u on m.user_id=u.id
     where m.member_id = #{memberId,jdbcType=BIGINT}
  </select>

  <select id="findByMemberEmailCount" resultType="int" parameterType="string" >
    SELECT
    count(*)
    FROM  gs_member
    where member_email = #{memberEmail,jdbcType=VARCHAR}
  </select>

  <select id="checkLoginNameByEmail" resultType="int">
    SELECT
    count(*)
    FROM  gs_member m,gs_user u
    where u.id=m.user_id and u.login_name=#{loginName,jdbcType=VARCHAR} and m.member_email = #{memberEmail,jdbcType=VARCHAR}
  </select>

  <select id="findAll" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from gs_member
  </select>

  <select id="findUserAll" resultMap="BaseResultMap"  >
    select m.*,u.user_name,u.login_name,u.login_num,u.login_time,u.login_ip from gs_member m LEFT JOIN gs_user u on m.user_id=u.id
  </select>

  <select id="findByMemberEmail" resultMap="BaseResultMap"  parameterType="string" >
    select
    <include refid="Base_Column_List" />
    from gs_member
    where member_email = #{memberEmail,jdbcType=VARCHAR}
  </select>

  <select id="query" resultMap="BaseResultMap"  >
    select m.*,u.user_name,u.login_name,u.login_num,u.login_time,u.login_ip
    from gs_member m LEFT JOIN gs_user u on m.user_id=u.id
    where 1=1
    <if test="loginName != null and loginName !=''  " >
     and u.login_name like CONCAT('%',#{loginName,jdbcType=VARCHAR},'%')
    </if>
    <if test="memberEmail != null and memberEmail !='' " >
      and m.member_email like CONCAT('%',#{memberEmail,jdbcType=VARCHAR},'%')
    </if>
    <if test="memberTruename != null and memberTruename != ''" >
      and member_truename like CONCAT('%',#{memberTruename,jdbcType=VARCHAR},'%')
    </if>
    <if test="informAllow != null" >
      and inform_allow = #{informAllow,jdbcType=INTEGER}
    </if>
    <if test="isBuy != null" >
      and is_buy = #{isBuy,jdbcType=INTEGER}
    </if>
    <if test="isAllowtalk != null" >
      and is_allowtalk = #{isAllowtalk,jdbcType=INTEGER}
    </if>
    <if test="memberState != null" >
      and member_state = #{memberState,jdbcType=INTEGER}
    </if>
    <if test="sort != null" >
      order by u.#{sort,jdbcType=VARCHAR}
    </if>
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select m.*,u.user_name,u.login_name,u.login_num,u.login_time,u.login_ip
    from gs_member m LEFT JOIN gs_user u on m.user_id=u.id
    where m.user_id = #{userId,jdbcType=INTEGER}
  </select>

</mapper>
