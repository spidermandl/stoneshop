<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.goshop.store.mapper.read.ReadStoreClassMapper" >
  <resultMap id="BaseResultMap" type="org.goshop.store.pojo.GsStoreClass" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="BIGINT" />
    <result column="addTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="deleteStatus" property="deletestatus" jdbcType="BIT" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="description_evaluate" property="descriptionEvaluate" jdbcType="DECIMAL" />
    <result column="service_evaluate" property="serviceEvaluate" jdbcType="DECIMAL" />
    <result column="ship_evaluate" property="shipEvaluate" jdbcType="DECIMAL" />
    <collection property="children" ofType="org.goshop.store.pojo.GsStoreClass" column="PARENT_ID">
      <id column="c_id" property="id" jdbcType="BIGINT" />
      <result column="c_sort" property="sort" jdbcType="INTEGER" />
      <result column="c_name" property="name" jdbcType="VARCHAR" />
      <result column="c_addTime" property="addtime" jdbcType="TIMESTAMP" />
      <result column="c_deleteStatus" property="deletestatus" jdbcType="BIT" />
      <result column="c_level" property="level" jdbcType="INTEGER" />
      <result column="c_description_evaluate" property="descriptionEvaluate" jdbcType="DECIMAL" />
      <result column="c_service_evaluate" property="serviceEvaluate" jdbcType="DECIMAL" />
      <result column="c_ship_evaluate" property="shipEvaluate" jdbcType="DECIMAL" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, sort, name, PARENT_ID,addTime,deleteStatus,level,description_evaluate,service_evaluate,ship_evaluate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from gs_store_class
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findAllOrderBySort" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from gs_store_class order by sort
  </select>

  <select id="findByNameParentId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from gs_store_class
    where name = #{name,jdbcType=VARCHAR} and
    <if test="parentId != null" >
      PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      PARENT_ID is null
    </if>
  </select>

  <select id="findCountByNameParentId" resultType="int" >
    SELECT
    count(*)
    FROM  gs_store_class
    where name = #{name,jdbcType=VARCHAR} and
    <if test="parentId != null" >
      PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      PARENT_ID is null
    </if>
  </select>


  <select id="findTreeByParentId" parameterType="long" resultMap="BaseResultMap">
    SELECT
    t.id ,
    t.name,
    t.sort ,
    t.PARENT_ID,
    t.addTime,
    t.deleteStatus,
    t.level,
    t.description_evaluate,
    t.service_evaluate,
    t.ship_evaluate,
    child.id AS c_id,
    child.name AS c_name,
    child.sort AS c_sort,
    child.PARENT_ID AS c_parent_id,
    child.addTime AS c_addTime,
    child.deleteStatus AS c_deleteStatus,
    child.level AS c_level,
    child.description_evaluate AS c_description_evaluate,
    child.service_evaluate AS c_service_evaluate,
    child.ship_evaluate AS c_ship_evaluate
    FROM
    gs_store_class t
    left join gs_store_class child ON (child.parent_id = t.id)
    WHERE
    <if test="parentId != null" >
      child.PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      t.PARENT_ID is null
    </if>
    order by t.sort
  </select>

  <select id="findByParentId" resultMap="BaseResultMap" parameterType="java.lang.Long"  >
    select
    <include refid="Base_Column_List" />
    from gs_store_class
    where
    <if test="parentId != null" >
      PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      PARENT_ID is null
    </if>
    order by sort
  </select>

  <select id="findGradeByParentId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    SELECT
	leaf.*, COUNT(entity.id) AS grade
FROM
	gs_store_class leaf
LEFT JOIN gs_store_class entity ON leaf.id = entity.PARENT_ID
WHERE
    <if test="parentId == null" >
      leaf.PARENT_ID  is null
    </if>
    <if test="parentId != null" >
      leaf.PARENT_ID  = #{parentId,jdbcType=BIGINT}
    </if>
GROUP BY
	leaf.id
    order by leaf.sort,leaf.id
  </select>
</mapper>
