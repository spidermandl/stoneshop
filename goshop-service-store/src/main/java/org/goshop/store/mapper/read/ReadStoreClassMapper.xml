<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.goshop.store.mapper.read.ReadStoreClassMapper" >
  <resultMap id="BaseResultMap" type="org.goshop.store.pojo.StoreClass" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="BIGINT" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <collection property="children" ofType="org.goshop.store.pojo.StoreClass" column="PARENT_ID">
      <id column="c_id" property="id" jdbcType="BIGINT" />
      <result column="c_sort" property="sort" jdbcType="INTEGER" />
      <result column="c_name" property="name" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, sort, name, PARENT_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from gs_store_class
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from gs_store_class
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.goshop.store.pojo.StoreClass"  useGeneratedKeys="true" keyProperty="id">
    insert into gs_store_class (id, sort, name, 
      PARENT_ID)
    values (#{id,jdbcType=BIGINT}, #{sort,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.goshop.store.pojo.StoreClass"  useGeneratedKeys="true" keyProperty="id">
    insert into gs_store_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.goshop.store.pojo.StoreClass" >
    update gs_store_class
    <set >
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.goshop.store.pojo.StoreClass" >
    update gs_store_class
    set sort = #{sort,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findAllOrderBySort" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from gs_store_class order by sort
  </select>

  <select id="findByNameParentId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from gs_store_class
    where name = #{name,jdbcType=VARCHAR} and
    <if test="parentId != null" >
      PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      PARENT_ID is null
    </if>
  </select>

  <select id="findCountByNameParentId" resultType="int" >
    SELECT
    count(*)
    FROM  gs_store_class
    where name = #{name,jdbcType=VARCHAR} and
    <if test="parentId != null" >
      PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      PARENT_ID is null
    </if>
  </select>


  <select id="findTreeByParentId" parameterType="long" resultMap="BaseResultMap">
    SELECT
    t.id ,
    t. NAME,
    t.sort ,
    t.PARENT_ID,
    child.id AS c_id,
    child. NAME AS c_name,
    child.sort AS c_sort,
    child.PARENT_ID AS c_parent_id
    FROM
    gs_store_class t
    left join gs_store_class child ON (child.parent_id = t.id)
    WHERE
    <if test="parentId != null" >
      child.PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      t.PARENT_ID is null
    </if>
    order by t.sort
  </select>

  <update id="updateSort" >
    update gs_store_class
    set sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateName" >
    update gs_store_class
    set name = #{name,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findByParentId" resultMap="BaseResultMap" parameterType="java.lang.Long"  >
    select
    <include refid="Base_Column_List" />
    from gs_store_class
    where
    <if test="parentId != null" >
      PARENT_ID = #{parentId,jdbcType=BIGINT}
    </if>
    <if test="parentId == null" >
      PARENT_ID is null
    </if>
    order by sort
  </select>

  <select id="findGradeByParentId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    SELECT
	leaf.*, COUNT(entity.id) AS grade
FROM
	gs_store_class leaf
LEFT JOIN gs_store_class entity ON leaf.id = entity.PARENT_ID
WHERE
    <if test="parentId == null" >
      leaf.PARENT_ID  is null
    </if>
    <if test="parentId != null" >
      leaf.PARENT_ID  = #{parentId,jdbcType=BIGINT}
    </if>
GROUP BY
	leaf.id
    order by leaf.sort,leaf.id
  </select>
</mapper>